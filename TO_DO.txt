check -MODELO VISTA CONTROLADOR
check -Entidades
check-DEFINIR UNICAMENTE MÉTODOS QUE SE VAYAN A USAR EN REPOSITORIOS
check -DEFINIR LÓGICA SERVICIOS
check??-PREVENCIÓN DE CRASHEO
check-RESPONSEENTITY
-ENDPOINTS: 
    Check-GET /projects
    check-Get /projects/{word}
   Check -POST /projects
    -PUT /projects/{id}
    check-Delete /projects/{id}
    check-POST /developers
    check-DELETE /developers
    check-POST /technologies
    check-DELETE /technologies

----------------REST------------------
check-BUENAS PRÁCTICAS, COMENTARIOS, ERRORES, REFACTOR
-README COMPLETO Y GUÍA
-ENDPOINT (Primer status development)
    -PATH /api/v1/projects/totesting (a status testing)
    -PATH /api/v1/projects/toprod (a status production)
-DTO genérico de respuesta a manipulación de datos
-ENDPOINTS: 
    -POST /api/v1/technologies/used -> tecnología a proyecto
    -POST /api/v1/developers/worked -> trabajador a proyecto
-SWAGGER con SPRINGDOC decribir api y detallas ENDPOINTS
check -RESTCONTROLLERADVICE que capture Excepciones
check -Anotaciones de validaciones a los atributos así como CUSTO VALIDATION a url
-GET /api/v1/projects/tec/{tech}