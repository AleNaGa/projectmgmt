check -MODELO VISTA CONTROLADOR
check -Entidades
check-DEFINIR UNICAMENTE MÉTODOS QUE SE VAYAN A USAR EN REPOSITORIOS
check -DEFINIR LÓGICA SERVICIOS
check??-PREVENCIÓN DE CRASHEO
check-RESPONSEENTITY
-ENDPOINTS: 
    Check-GET /projects
    check-Get /projects/{word}
   Check -POST /projects
    -PUT /projects/{id}
    check-Delete /projects/{id}
    check-POST /developers
    check-DELETE /developers
    check-POST /technologies
    check-DELETE /technologies

----------------REST------------------
check-BUENAS PRÁCTICAS, COMENTARIOS, ERRORES, REFACTOR
-README COMPLETO Y GUÍA
-ENDPOINT (Primer status development)
    -PATH /api/v1/projects/totesting (a status testing)
    -PATH /api/v1/projects/toprod (a status production)
-DTO genérico de respuesta a manipulación de datos
-ENDPOINTS: 
    -POST /api/v1/technologies/used -> tecnología a proyecto
    -POST /api/v1/developers/worked -> trabajador a proyecto
-SWAGGER con SPRINGDOC decribir api y detallas ENDPOINTS
check -RESTCONTROLLERADVICE que capture Excepciones
check -Anotaciones de validaciones a los atributos así como CUSTO VALIDATION a url
-GET /api/v1/projects/tec/{tech}





JSON INSERTAR proyecto
{
    "projectId": 0,
    "name": "prueba proyectos",
    "description": "esto es la prueba 3",
    "startDate": "2024-10-01",
    "endDate": "2024-11-23",
    "repoUrl": "https://github.com/proyecto",
    "demoUrl": "https://demo-proyecto.com",
    "pictureUrl": "https://proyecto.com/imagen.png",
    "developersIds": [1],
    "technologiesIds": [0]
}

JSON de Insertar developers
{
  "devId": 1,
  "name": "Juan",
  "surname": "Pérez",
  "email": "juan.perez@example.com",
  "linkedinUrl": "https://linkedin.com/in/juan-perez",
  "githubUrl": "https://github.com/juanperez",
  "projectsIds": [1,2,4]
}